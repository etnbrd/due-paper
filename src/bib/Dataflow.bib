Automatically generated by Mendeley Desktop 1.12.3-dev1
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@book{Morrison1994b,
author = {Morrison, JP},
title = {{Flow-based programming - introduction}},
url = {http://ersaconf.org/ersa-adn/papers/adn003.pdf},
year = {1994}
}
@inproceedings{Hormati2009,
author = {Hormati, Amir H and Choi, Yoonseo and Kudlur, Manjunath and Rabbah, Rodric and Mudge, Trevor and Mahlke, Scott},
booktitle = {Parallel Architectures and Compilation Techniques, 2009. PACT'09. 18th International Conference on},
keywords = { alire, heterogeneous,dataflow},
organization = {IEEE},
pages = {214--223},
title = {{Flextream: Adaptive compilation of streaming applications for heterogeneous architectures}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5260540},
year = {2009}
}
@inproceedings{Giorgi2012,
abstract = {The TERAFLUX project is a Future and Emerging Technologies (FET) Large-Scale
Project funded by the European Union. TERAFLUX is at the forefront
of major research challenges such as programmability, manageable
architecture design, reliability of many-core or 1000+ core chips.
In the near future, new computing systems will consist of a huge
number of transistors - probably 1 Tera or 1000 billions by 2020:
we name such systems as "Teradevices". In this project, the aim is
to solve the three challenges at once by using the dataflow principles
wherever they are applicable or make sense in the general economy
of the system. An Instruction Set Extension (ISE) for the x86-64
is illustrated. This ISE supports the dataflow execution of threads.},
author = {Giorgi, Roberto},
booktitle = {Proceedings of the 9th conference on Computing Frontiers},
keywords = {dataflow},
organization = {ACM},
pages = {303--304},
title = {{TERAFLUX: exploiting dataflow parallelism in teradevices}},
url = {http://dl.acm.org/citation.cfm?id=2212959},
year = {2012}
}
@phdthesis{Moreira2012,
author = {Moreira, Orlando},
keywords = { SDR, alire,dataflow},
school = {Ph. D. dissertation, TU Eindhoven},
title = {{Temporal analysis and scheduling of hard real-time radios running on a multi-processor}},
year = {2012}
}
@phdthesis{Thies2009,
author = {Thies, William},
keywords = { alire,dataflow},
school = {Massachusetts Institute of Technology},
title = {{Language and compiler support for stream programs}},
year = {2009}
}
@inproceedings{?,
author = {Stuijk, Sander and Geilen, Marc and Theelen, Bart and Basten, Twan},
booktitle = {Embedded Computer Systems (SAMOS), 2011 International Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {404--411},
title = {{Scenario-aware dataflow: Modeling, analysis and implementation of dynamic applications}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6045491},
year = {2011}
}
@inproceedings{Gautier2007,
author = {Gautier, Thierry and Besseron, Xavier and Pigeon, Laurent},
booktitle = {Proceedings of the 2007 international workshop on Parallel symbolic computation},
keywords = { alire, important,dataflow},
organization = {ACM},
pages = {15--23},
title = {{KAAPI: A thread scheduling runtime system for data flow computations on cluster of multi-processors}},
url = {http://dl.acm.org/citation.cfm?id=1278182},
year = {2007}
}
@inproceedings{Ghamarian2008,
author = {Ghamarian, A H and Geilen, M C W and Basten, T and Stuijk, S},
booktitle = {Design, Automation and Test in Europe, 2008. DATE '08},
doi = {10.1109/DATE.2008.4484672},
keywords = { alire,dataflow},
pages = {116--121},
title = {{Parametric Throughput Analysis of Synchronous Data Flow Graphs}},
url = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4484672},
year = {2008}
}
@inproceedings{Pop2011,
abstract = {This paper introduces an extension to OpenMP3.0 enabling stream programming
with minimal, incremental additions that seamlessly integrate into
the current specification. The stream programming model decomposes
programs into tasks and explicits the flow of data among them, thus
exposing data, task and pipeline parallelism. It helps the programmers
to express concurrency and data local- ity properties, avoiding non-portable
low-level code and early opti- mizations. We survey the diverse motivations
and constraints con- verging towards the design of our simple yet
powerful language extension, and we present experimental results
of a prototype im- plementation in a public branch of GCC 4.5.},
author = {Pop, Antoniu and Cohen, Albert},
booktitle = {HiPEAC},
keywords = { important, lu,dataflow},
pages = {5--14},
title = {{A stream-computing extension to OpenMP}},
year = {2011}
}
@inproceedings{Labonte2004,
abstract = {Stream programming is currently being pushed as a way to expose concurrency and separate communication from computation. Since there are many stream languages and potential stream execution engines, this paper proposes an abstract machine model that captures the essential characteristics of stream architectures, the Stream Virtual Machine (SVM). The goal of the SVM is to improve interoperability, allow developpment of common compilation tools and reason about stream program performance. The SVM contains control processors, slave kernel processors, and slave DMA units. Is is presented along with the compilation process that takes a stream program down to the SVM and finally down to machine binary. To extract the parameters for our SVM model, we use micro-kernels to characterize two graphics processors and a stream engine, Imagine. The results are encouraging; the model estimates the performance of the target machines with high accuracy.},
author = {Labonte, Francois and Mattson, Peter and Thies, William and Buck, Ian and Kozyrakis, Christos and Horowitz, Mark},
booktitle = {Proceedings of the 13th International Conference on Parallel Architectures and Compilation Techniques},
keywords = {alire,dataflow},
organization = {IEEE Computer Society},
pages = {267--277},
publisher = {Ieee},
title = {{The stream virtual machine}},
url = {http://dl.acm.org/citation.cfm?id=1026015 http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1342560},
year = {2004}
}
@inproceedings{Sanchez2011,
author = {Sanchez, Daniel and Lo, David and Yoo, Richard M and Sugerman, Jeremy and Kozyrakis, Christos},
booktitle = {PACT},
keywords = { alire,dataflow},
pages = {22--32},
title = {{Dynamic Fine-Grain Scheduling of Pipeline Parallelism}},
year = {2011}
}
@inproceedings{Poplavko2010,
author = {Poplavko, Peter and Geilen, Marc and Basten, Twan},
booktitle = {Computer Design (ICCD), 2010 IEEE International Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {282--288},
title = {{Predicting the throughput of multiprocessor applications under dynamic workload}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5647740},
year = {2010}
}
@phdthesis{Hormati2011,
author = {Hormati, Amir H},
keywords = { alire, heterogeneous,dataflow},
school = {IBM},
title = {{Compiling Stream Applications for Heterogeneous Architectures}},
year = {2011}
}
@incollection{Goubier2011,
author = {Goubier, Thierry and Sirdey, Renaud and Louise, St\'{e}phane and David, Vincent},
booktitle = {Algorithms and Architectures for Parallel Processing},
keywords = { alire,dataflow},
pages = {385--394},
publisher = {Springer},
title = {{$\Sigma$C: A programming model and language for embedded manycores}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-24650-0_33},
year = {2011}
}
@inproceedings{Geilen2010,
author = {Geilen, Marc and Sander},
booktitle = {Hardware/Software Codesign and System Synthesis (CODES+ISSS), 2010 IEEE/ACM/IFIP International Conference on},
keywords = { alire,dataflow},
pages = {125--134},
title = {{Worst-case performance analysis of Synchronous Dataflow scenarios}},
url = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5751491},
year = {2010}
}
@article{Murthy2002,
author = {Murthy, Praveen K and Lee, Edward A},
journal = {Signal Processing, IEEE Transactions on},
keywords = { alire,dataflow},
number = {8},
pages = {2064--2079},
publisher = {IEEE},
title = {{Multidimensional synchronous dataflow}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1018801},
volume = {50},
year = {2002}
}
@incollection{Carpenter2009,
author = {Carpenter, Paul M and Ramirez, Alex and Ayguade, Eduard},
booktitle = {Embedded Computer Systems: Architectures, Modeling, and Simulation},
keywords = { alire,dataflow},
pages = {12--23},
publisher = {Springer},
title = {{The abstract streaming machine: compile-time performance modelling of stream programs on heterogeneous multiprocessors}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-03138-0_3},
year = {2009}
}
@article{Lee1987,
author = {Lee, Edward A and Messerschmitt, David G},
journal = {Proceedings of the IEEE},
keywords = { alire,dataflow},
number = {9},
pages = {1235--1245},
publisher = {IEEE},
title = {{Synchronous data flow}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1458143},
volume = {75},
year = {1987}
}
@techreport{Soule2012a,
abstract = {Developers increasingly use stream processing languages to write applications
that process large volumes of data with high throughput. Unfortunately,
when choosing which stream processing language to use, they face
a difficult choice. On the one hand, dynamically scheduled languages
allow developers to write a wider range of applications, but cannot
take advantage of many crucial optimizations. On the other hand,
statically scheduled languages are extremely performant, but cannot
express many important streaming applications.

This paper presents the design of a hybrid scheduler for stream processing
languages. The compiler partitions the streaming application into
coarse-grained subgraphs sepa- rated by dynamic rate boundaries.
It then applies static op- timizations to those subgraphs. We have
implemented this scheduler as an extension to the StreamIt compiler,
and eval- uated its performance against three scheduling techniques
used by dynamic systems: OS thread, demand, and no-op. Our scheduler
not only allows the previously static version of StreamIt to run
dynamic rate applications, but it outper- forms the three dynamic
alternatives. This demonstrates that our scheduler strikes the right
balance between expressivity and performance for stream processing
languages.},
author = {Soul�, Robert and Gordon, Michael I and Amarasinghe, Saman and Grimm, Robert and Hirzel, Martin},
institution = {New York University},
keywords = {dataflow},
number = {Technical Report TR2012-948},
title = {{Hitting the Sweet Spot for Streaming Languages: Dynamic Expressivity with Static Optimization}},
year = {2012}
}
@inproceedings{Wu2009,
author = {Wu, Nan and Wen, Mei and Wu, Wei and Ren, Ju and Su, Huayou and Xun, Changqing and Zhang, Chunyuan},
booktitle = {Proceedings of the 17th ACM international conference on Multimedia},
keywords = { alire,dataflow},
organization = {ACM},
pages = {371--380},
title = {{Streaming HD H. 264 encoder on programmable processors}},
url = {http://dl.acm.org/citation.cfm?id=1631324},
year = {2009}
}
@inproceedings{Bonfietti2010,
author = {Bonfietti, Alessio and Benini, Luca and Lombardi, Michele and Milano, Michela},
booktitle = {Design, Automation & Test in Europe Conference & Exhibition (DATE), 2010},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {897--902},
title = {{An efficient and complete approach for throughput-maximal SDF allocation and scheduling on multi-core platforms}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5456924},
year = {2010}
}
@inproceedings{Gummaraju2008,
author = {Gummaraju, Jayanth and Coburn, Joel and Turner, Yoshio and Rosenblum, Mendel},
booktitle = {ASPLOS},
keywords = { alire,dataflow},
pages = {297--307},
title = {{Streamware: programming general-purpose multicore processors using streams}},
year = {2008}
}
@inproceedings{Damavandpeyma2012,
author = {Morteza and Stuijk, Sander and Geilen, Marc and Basten, Twan and Corporaal, Henk},
booktitle = {Computer Design (ICCD), 2012 IEEE 30th International Conference on},
doi = {10.1109/ICCD.2012.6378644},
keywords = { alire,dataflow},
pages = {219--226},
title = {{Parametric throughput analysis of scenario-aware dataflow graphs}},
url = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6378644},
year = {2012}
}
@inproceedings{Wipliez2010,
author = {Wipliez, Matthieu and Raulet, Micka\"{e}l},
booktitle = {Design and Architectures for Signal and Image Processing (DASIP), 2010 Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {303--310},
title = {{Classification and transformation of dynamic dataflow programs}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5706280},
year = {2010}
}
@inproceedings{Cohen2012,
author = {Cohen, Albert and G\'{e}rard, L\'{e}onard and Pouzet, Marc},
booktitle = {EMSOFT},
keywords = { alire, synchrone,dataflow},
pages = {197--206},
title = {{Programming parallelism with futures in lustre}},
year = {2012}
}
@inproceedings{Stuijk2007,
author = {Stuijk, Sander and Basten, T and Geilen, M C W and Corporaal, Henk},
booktitle = {Design Automation Conference, 2007. DAC'07. 44th ACM/IEEE},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {777--782},
title = {{Multiprocessor resource allocation for throughput-constrained synchronous dataflow graphs}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4261288},
year = {2007}
}
@article{Ashcroft1977,
author = {Ashcroft, Edward A and Wadge, William W},
journal = {Communications of the ACM},
keywords = {alire,dataflow},
number = {7},
pages = {519--526},
publisher = {ACM},
title = {{Lucid, a nonprocedural language with iteration}},
url = {http://dl.acm.org/citation.cfm?id=359715},
volume = {20},
year = {1977}
}
@phdthesis{Soule2012b,
author = {Soul�, Robert},
keywords = { alire,dataflow},
school = {New York University},
title = {{Reusable Software Infrastructure for Stream Processing}},
year = {2012}
}
@mastersthesis{Tan2010,
author = {Tan, Ceryen},
keywords = { important, lu,dataflow},
school = {Massachusetts Institute of Technology},
title = {{A hybrid static/dynamic approach to scheduling stream programs}},
url = {http://18.7.29.232/handle/1721.1/61291},
year = {2009}
}
@mastersthesis{Wong2012,
author = {Wong, Eric},
keywords = { alire,dataflow},
school = {Massachusetts Institute of Technology},
title = {{Optimizations in Stream Programming for Multimedia Applications}},
year = {2012}
}
@article{Lee1995,
author = {Lee, Edward A and Parks, Thomas M},
journal = {Proceedings of the IEEE},
keywords = { alire,dataflow},
number = {5},
pages = {773--801},
publisher = {IEEE},
title = {{Dataflow process networks}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=381846},
volume = {83},
year = {1995}
}
@inproceedings{Lin2011,
author = {Lin, Jing and Srivatsa, Akshaya and Gerstlauer, Andreas and Evans, Brian L},
booktitle = {Acoustics, Speech and Signal Processing (ICASSP), 2011 IEEE International Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {1605--1608},
title = {?},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5946804},
year = {2011}
}
@article{Fradet2011,
author = {Fradet, Pascal and Girault, Alain and Poplavko, Peter and Others},
keywords = { important, lu,dataflow},
title = {{SPDF: A Schedulable Parametric Data-Flow MoC (Extended Version)}},
url = {http://hal.archives-ouvertes.fr/hal-00666284/},
year = {2011}
}
@phdthesis{Gordon2010,
abstract = {Given the ubiquity of multicore processors, there is an acute need
to enable the development of scalable parallel applications without
unduly burdening programmers. Currently, programmers are asked not
only to explicitly expose parallelism but also concern themselves
with issues of granu- larity, load-balancing, synchronization, and
communication. This thesis demonstrates that when algorithmic parallelism
is expressed in the form of a stream program, a compiler can effectively
and automatically manage the parallelism. Our compiler assumes responsibility
for low-level architec- tural details, transforming implicit algorithmic
parallelism into a mapping that achieves scalable parallel performance
for a given multicore target.

Stream programming is characterized by regular processing of sequences
of data, and it is a natural expression of algorithms in the areas
of audio, video, digital signal processing, network- ing, and encryption.
Streaming computation is represented as a graph of independent computa-
tion nodes that communicate explicitly over data channels. Our techniques
operate on contiguous regions of the stream graph where the input
and output rates of the nodes are statically deter- minable. Within
a static region, the compiler first automatically adjusts the granularity
and then exploits data, task, and pipeline parallelism in a holistic
fashion. We introduce techniques that data-parallelize nodes that
operate on overlapping sliding windows of their input, translating
se- rializing state into minimal and parametrized inter-core communication.
Finally, for nodes that cannot be data-parallelized due to state,
we are the first to automatically apply software-pipelining techniques
at a coarse granularity to exploit pipeline parallelism between stateful
nodes.

Our framework is evaluated in the context of the StreamIt programming
language. StreamIt is a high-level stream programming language that
has been shown to improve programmer pro- ductivity in implementing
streaming algorithms. We employ the StreamIt Core benchmark suite
of 12 real-world applications to demonstrate the effectiveness of
our techniques for varying multi- core architectures. For a 16-core
distributed memory multicore, we achieve a 14.9x mean speedup. For
benchmarks that include sliding-window computation, our sliding-window
data-parallelization techniques are required to enable scalable performance
for a 16-core SMP multicore (14x mean speedup) and a 64-core distributed
shared memory multicore (52x mean speedup).},
author = {Gordon, Michael I},
keywords = { important, lu,dataflow},
publisher = {Massachusetts Institute of Technology},
school = {Massachusetts Institute of Technology. Dept. of Electrical Engineering and Computer Science},
title = {{Compiler techniques for scalable performance of stream programs on multicore architectures}},
year = {2010}
}
@article{Gautier1987,
author = {Gautier, T and Guernic, P Le and Besnard, L},
journal = {Functional programming languages  \ldots},
title = {{Signal: A declarative language for synchronous programming of real-time systems}},
url = {http://link.springer.com/chapter/10.1007/3-540-18317-5_15},
year = {1987}
}
@inproceedings{Weis2011,
author = {Weis, Sebastian and Garbade, Arne and Wolf, Julian and Fechner, Bernhard and Mendelson, Avi and Giorgi, Roberto and Ungerer, Theo},
booktitle = {Data-Flow Execution Models for Extreme Scale Computing (DFM), 2011 First Workshop on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {38--44},
title = {{A Fault Detection and Recovery Architecture for a Teradevice Dataflow System}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6176403},
year = {2011}
}
@inproceedings{Buck1993,
author = {Buck, Joseph Tobin and Lee, Edward A},
booktitle = {Acoustics, Speech, and Signal Processing, 1993. ICASSP-93., 1993 IEEE International Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {429--432},
title = {{Scheduling dynamic dataflow graphs with bounded memory using the token flow model}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=319147},
volume = {1},
year = {1993}
}
@article{Kahn1974,
author = {Kahn, Gilles},
keywords = { important, lu,dataflow},
publisher = {North-Holland},
title = {{The semantics of a simple language for parallel programming}},
year = {1974}
}
@phdthesis{Vrba2009,
author = {Vrba, \v{Z}eljko},
keywords = { alire,dataflow},
school = {PhD thesis, Department of Informatics, University of Oslo, Norway},
title = {{Implementation and performance aspects of Kahn process networks}},
year = {2009}
}
@inproceedings{Silc1997,
author = {Silc, Jurij and Robi\v{c}, Borut and Ungerer, Theo},
booktitle = {Progress in computer research},
keywords = { alire,dataflow},
organization = {Nova Science Publishers, Inc.},
pages = {1--33},
title = {{Asynchrony in parallel computing: from dataflow to multithreading}},
url = {http://dl.acm.org/citation.cfm?id=568127},
year = {1997}
}
@inproceedings{Gordon2002,
author = {Gordon, Michael I and Thies, William and Karczmarek, Michal and Lin, Jasper and Meli, Ali S and Lamb, Andrew A and Leger, Chris and Wong, Jeremy and Hoffmann, Henry and Maze, David and Amarasinghe, Saman P},
booktitle = {ASPLOS},
keywords = { important, lu,dataflow},
pages = {291--303},
title = {{A stream compiler for communication-exposed architectures}},
year = {2002}
}
@article{Castrillon2013,
author = {Castrillon, Jeronimo and Leupers, Rainer and Ascheid, Gerd},
journal = {IEEE Transactions on Industrial Informatics},
keywords = { alire, heterogeneous,dataflow},
pages = {527--545},
publisher = {IEEE},
title = {{Maps: Mapping concurrent dataflow applications to heterogeneous mpsocs}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6062671},
volume = {9},
year = {2013}
}
@article{Wei2012,
author = {Wei, Haitao and Yu, Junqing and Yu, Huafei and Qin, Mingkang and Gao, Guangrong},
keywords = { alire,dataflow},
publisher = {IEEE},
title = {{Software pipelining for stream programs on resource constrained multi-core architectures}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6143921},
year = {2012}
}
@inproceedings{Siyoum2011,
author = {Siyoum, Firew and Geilen, Marc and Moreira, Orlando and Nas, Rick and Corporaal, Henk},
booktitle = {System on Chip (SoC), 2011 International Symposium on},
doi = {10.1109/ISSOC.2011.6089222},
keywords = { SDR, alire,dataflow},
pages = {14--21},
title = {{Analyzing synchronous dataflow scenarios for dynamic software-defined radio applications}},
url = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6089222},
year = {2011}
}
@phdthesis{Carpenter2011,
author = {Carpenter, Paul},
keywords = { alire, heterogeneous,dataflow},
publisher = {Universitat Polit{\`{e}}cnica de Catalunya},
title = {{Running stream-like programs on heterogeneous multi-core systems}},
url = {http://www.tdx.cat/handle/10803/84186},
year = {2011}
}
@techreport{Hirzel2011,
author = {Hirzel, Martin and Soul\'{e}, Robert and Schneider, Scott and Gedik, Bugra and Grimm, Robert},
institution = {Research Report RC25215, IBM},
keywords = { alire,dataflow},
title = {{A catalog of stream processing optimizations}},
year = {2011}
}
@inproceedings{Buck1992,
author = {Buck, Joseph and Lee, Edward A},
booktitle = {Data Flow Workshop},
keywords = { alire,dataflow},
organization = {Citeseer},
title = {{The token flow model}},
year = {1992}
}
@article{Berry1984b,
author = {Berry, G and Cosserat, L},
title = {{The Esterel synchronous programming language and its mathematical semantics}},
url = {http://hal.inria.fr/docs/00/07/62/30/PDF/RR-0327.pdf},
year = {1984}
}
@inproceedings{Gummaraju2007,
author = {Gummaraju, Jayanth and Erez, Mattan and Coburn, Joel and Rosenblum, Mendel and Dally, William J},
booktitle = {Proceedings of the 16th International Conference on Parallel Architecture and Compilation Techniques},
keywords = { alire,dataflow},
organization = {IEEE Computer Society},
pages = {3--12},
title = {{Architectural support for the stream execution model on general-purpose processors}},
url = {http://dl.acm.org/citation.cfm?id=1299106},
year = {2007}
}
@inproceedings{Pastrnak2004,
author = {Pastrnak, Milan and Poplavko, Peter and Farin, Dirk S and Others},
booktitle = {System-on-Chip for Real-Time Applications, 2004. Proceedings. 4th IEEE International Workshop on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {206--209},
title = {{Data-flow timing models of dynamic multimedia applications for multiprocessor systems}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1319879},
year = {2004}
}
@inproceedings{Yu2011,
author = {Yu, Zhibin and Righi, Andrea and Giorgi, Roberto},
booktitle = {FUTURE COMPUTING 2011, The Third International Conference on Future Computational Technologies and Applications},
keywords = { alire,dataflow},
pages = {100--106},
title = {{A Case Study on the Design Trade-off of a Thread Level Data Flow based Many-core Architecture}},
url = {http://www.thinkmind.org/index.php?view=article&amp;articleid=future_computing_2011_4_40_30125},
year = {2011}
}
@inproceedings{Soule2012c,
author = {Soul�, Robert and Hirzel, Martin and Gedik, Bu\ugra and Grimm, Robert},
booktitle = {Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems},
keywords = { alire,dataflow},
organization = {ACM},
pages = {20--31},
title = {{From a calculus to an execution environment for stream processing}},
url = {http://dl.acm.org/citation.cfm?id=2335487},
year = {2012}
}
@inproceedings{Stuijk2010,
author = {Stuijk, Sander and Geilen, Marc and Basten, Twan},
booktitle = {Digital System Design: Architectures, Methods and Tools (DSD), 2010 13th Euromicro Conference on},
keywords = { alire,dataflow},
organization = {IEEE},
pages = {548--555},
title = {{A predictable multiprocessor design flow for streaming applications with dynamic behaviour}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5615547},
year = {2010}
}
@article{Zhang2008,
author = {Zhang, David and Li, Qiuyuan J and Rabbah, Rodric M and Amarasinghe, Saman P},
journal = {SIGARCH Computer Architecture News},
keywords = { alire,dataflow},
number = {2},
pages = {18--27},
title = {{A lightweight streaming layer for multicore execution}},
volume = {36},
year = {2008}
}
@inproceedings{Sermulins2005,
author = {Sermulins, Janis and Thies, William and Rabbah, Rodric and Amarasinghe, Saman},
booktitle = {ACM SIGPLAN Notices},
keywords = { alire,dataflow},
number = {7},
organization = {ACM},
pages = {115--126},
title = {{Cache aware optimization of stream programs}},
url = {http://dl.acm.org/citation.cfm?id=1065927},
volume = {40},
year = {2005}
}
@inproceedings{Dashti2013,
author = {Dashti, Mohammad and Fedorova, Alexandra and Funston, Justin and Gaud, Fabien and Lachaize, Renaud and Lepers, Baptiste and Qu\'{e}ma, Vivien and Roth, Mark},
booktitle = {Proceedings of the eighteenth international conference on Architectural support for programming languages and operating systems},
keywords = { alire, heterogeneous,dataflow},
organization = {ACM},
pages = {381--394},
title = {{Traffic management: A holistic approach to memory placement on numa systems}},
year = {2013}
}
@inproceedings{Spring2007,
author = {Spring, Jesper Honig and Privat, Jean and Guerraoui, Rachid and Vitek, Jan},
booktitle = {OOPSLA},
keywords = { lu,dataflow},
pages = {211--228},
title = {{Streamflex: high-throughput stream programming in java}},
year = {2007}
}
@article{Johnston2004,
abstract = {Many developments have taken place within dataflow programming languages in the past decade. In particular, there has been a great deal of activity and advancement in the field of dataflow visual programming languages. The motivation for this article is to review the content of these recent developments and how they came about. It is supported by an initial review of dataflow programming in the 1970s and 1980s that led to current topics of research. It then discusses how dataflow programming evolved toward a hybrid von Neumann dataflow formulation, and adopted a more coarse-grained approach. Recent trends toward dataflow visual programming languages are then discussed with reference to key graphical dataflow languages and their development environments. Finally, the article details four key open topics in dataflow programming languages.},
author = {Johnston, Wesley M and Hanna, J R and Millar, Richard J},
journal = {ACM Computing Surveys (CSUR)},
keywords = {alire,dataflow,survey},
pages = {1--34},
publisher = {ACM},
title = {{Advances in dataflow programming languages}},
url = {http://dl.acm.org/citation.cfm?id=1013209},
volume = {36},
year = {2004}
}
@inproceedings{Lin2008,
author = {Lin, Yuan and Choi, Yoonseo and Mahlke, Scott A and Mudge, Trevor N and Chakrabarti, Chaitali},
booktitle = {ICSAMOS},
keywords = { alire,dataflow},
pages = {10--17},
title = {{A parameterized dataflow language extension for embedded streaming systems}},
year = {2008}
}
@inproceedings{Damavandpeyma2013,
author = {Damavandpeyma, Morteza and Stuijk, Sander and Basten, Twan and Geilen, Marc and Corporaal, Henk},
booktitle = {Proceedings of the 19th IEEE Real-Time and Embedded Technology and Applications Symposium},
keywords = { alire,dataflow},
title = {{Throughput-Constrained DVFS for Scenario-Aware Dataflow Graphs}},
year = {2013}
}
@article{Pop2013,
abstract = {We present OpenStream, a data-flow extension of OpenMP to express
dynamic dependent tasks. The lan- guage supports nested task creation,
modular composition, variable and unbounded sets of producers/con-
sumers, and first-class streams. These features, enabled by our original
compilation flow, allow translating high-level parallel programming
patterns, like dependences arising from StarSs? array regions, or
univer- sal low-level primitives like futures. In particular, these
dynamic features can be embedded efficiently and naturally into an
unmanaged imperative language, avoiding the complexity and overhead
of a concurrent garbage collector. We demonstrate the performance
advantages of a data-flow execution model compared to more restricted
task and barrier models. We also demonstrate the efficiency of our
compilation and runtime algorithms for the support of complex dependence
patterns arising from StarSs benchmarks.},
author = {Pop, Antoniu and Cohen, Albert},
journal = {TACO},
keywords = { important, lu,dataflow},
number = {4},
pages = {53},
title = {{OpenStream: Expressiveness and data-flow compilation of OpenMP streaming programs}},
volume = {9},
year = {2013}
}
@article{Bhattacharya2001,
author = {Bhattacharya, Bishnupriya and Bhattacharyya, Shuvra S},
journal = {Signal Processing, IEEE Transactions on},
keywords = { alire,dataflow},
number = {10},
pages = {2408--2421},
publisher = {IEEE},
title = {{Parameterized dataflow modeling for DSP systems}},
url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=950795},
volume = {49},
year = {2001}
}
